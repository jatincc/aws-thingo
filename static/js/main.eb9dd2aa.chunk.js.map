{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","CheckboxList","classes","React","useState","checked","setChecked","Dataset","map","_","a","questions","setQuestions","Math","floor","random","length","randomIndex","setRandomIndex","wrong","setWrong","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleAccurateAnswer","newQuestions","handleNext","List","className","component","subheader","ListSubheader","disableSticky","inset","id","ListItem","role","undefined","ListItemText","parse","question","answers","count","labelId","dense","button","onClick","secondaryTypographyProps","variant","style","display","alignItems","Checkbox","edge","tabIndex","disableRipple","size","color","correct","inputProps","fontSize","body","textAlign","paddingTop","Button","ans","forEach","item","JSON","stringify","sort","ReactDOM","render","document","querySelector"],"mappings":"q6hXAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACPC,MAAO,OAEPC,gBAAiBH,EAAMI,QAAQC,WAAWC,WAyB5B,SAASC,IACvB,IAAMC,EAAUV,IADsB,EAERW,IAAMC,SAAS,IAFP,mBAE/BC,EAF+B,KAEtBC,EAFsB,OAGJH,IAAMC,SAASG,EAAQC,KAAI,SAACC,EAAEC,GAAH,OAASA,MAHhC,mBAG/BC,EAH+B,KAGpBC,EAHoB,OAIAT,IAAMC,SAASS,KAAKC,MAAMD,KAAKE,SAAWJ,EAAUK,SAJpD,mBAI/BC,EAJ+B,KAIlBC,EAJkB,OAKZf,IAAMC,UAAS,GALH,mBAK/Be,EAL+B,KAKxBC,EALwB,KAShCC,EAAe,SAACC,GAAD,OAAW,WAC/B,IAAMC,EAAelB,EAAQmB,QAAQF,GAC/BG,EAAU,YAAOpB,IAED,IAAlBkB,EACJE,EAAWC,KAAKJ,GAEhBG,EAAWE,OAAOJ,EAAc,GAGhCjB,EAAWmB,KAoBNG,EAAuB,WAC5B,IAAIC,EAAelB,EACnBkB,EAAaF,OAAOV,EAAa,GACjCL,EAAaiB,IAGRC,EAAa,WAClBZ,EAAeL,KAAKC,MAAMD,KAAKE,SAAWJ,EAAUK,SACpDV,EAAW,IACXc,GAAS,IAGV,OACC,qCACC,eAACW,EAAA,EAAD,CAAMC,UAAW9B,EAAQP,KACxBsC,UAAU,MACVC,UACA,cAACC,EAAA,EAAD,CAAeC,eAAa,EAACC,OAAK,EAACJ,UAAU,KAAKK,GAAG,wBAArD,mBACK3B,EAAUK,OADf,qBAHD,UAOC,cAACuB,EAAA,EAAD,CAAmBC,UAAMC,EAAzB,SAEC,cAACC,EAAA,EAAD,CAAcJ,GAAI,WAAlB,SAEGK,YAAM,sCAAD,OAAuCpC,EAAQI,EAAUM,IAAc2B,SAAvE,qBAJM,IASdrC,EAAQI,EAAUM,IAAc4B,QAAQrC,KAAI,SAACc,EAAOwB,GACpD,IAAMC,EAAO,8BAA0BD,GAEvC,OACA,cAACP,EAAA,EAAD,CAAsBC,UAAMC,EAAWO,OAAK,EAACC,QAAM,EAACC,QAAS7B,EAAayB,GAA1E,SAGG,cAACJ,EAAA,EAAD,CAAcM,OAAK,EAACG,yBAA0B,CAC7CC,QAAS,WACPd,GAAIS,EAFP,SAIA,sBAAKM,MAAO,CACXC,QAAS,OACTC,WAAW,UAFZ,UAIC,cAACC,EAAA,EAAD,CACCC,KAAK,QACLpD,SAAqC,IAA5BA,EAAQmB,QAAQsB,GACzBY,UAAW,EACXC,eAAa,EACbC,KAAK,QACLP,MAAO,CACNQ,MAAO1C,IAAUG,EAAMwC,QAAU,QAAQ,QAE1CC,WAAY,CAAE,kBAAmBhB,KAElC,qBAAKM,MAAO,CACXW,SAAU,OACVH,MAAO1C,IAAUG,EAAMwC,QAAU,QAAQ,QAF1C,SAIExC,EAAM2C,aA1BGnB,SAkCjB,qBAAKO,MAAO,CAAEa,UAAU,SAAUC,WAAW,QAA7C,SAEGhD,EAMA,cAACiD,EAAA,EAAD,CAAQlB,QAASpB,EAAYsB,QAAQ,YAAYS,MAAM,UAAvD,kBAJA,cAACO,EAAA,EAAD,CAAQlB,QAzFQ,WACpB,IAAMmB,EAAM,GACZ9D,EAAQI,EAAUM,IAAc4B,QAAQyB,SAAQ,SAACC,EAAMzB,GAClDyB,EAAKT,SACRO,EAAI3C,KAAKoB,MAGM0B,KAAKC,UAAUJ,EAAIK,UAAYF,KAAKC,UAAUpE,EAAQqE,SAKtE9C,IACAE,KAHAV,GAAS,IA+EyBgC,QAAQ,YAAYS,MAAM,UAAzD,yBClJNc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.eb9dd2aa.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'html-react-parser';\nimport React from 'react';\nimport Dataset from './dataset.json';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\twidth: '100%',\n\t// maxWidth: 360,\n\tbackgroundColor: theme.palette.background.paper,\n  },\n}));\n// const existing = [];\n// for (let a = 0; a < Dataset.length; a++) {\n// \tconst elementA = Dataset[a];\n// \tfor (let b = 0; b < Dataset.length; b++) {\n// \t\tconst elementB = Dataset[b];\n// \t\tif (existing.indexOf(a) !== -1) {\n// \t\t\tcontinue;\n// \t\t}\n// \t\tif (a !== b && elementA.question === elementB.question) {\n// \t\t\texisting.push(b);\n// \t\t\tconsole.log(elementA.id, '=', elementB.id);\n// \t\t\tfor (let ans = 0; ans < elementB.answers.length; ans++) {\n// \t\t\t\tconst elementAns = elementB.answers[ans];\n// \t\t\t\tif (elementAns.correct !== elementA.answers[ans].correct) {\n// \t\t\t\t\tconsole.log(elementAns.body, '!',elementA.answers[ans].body)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t}\n// }\n// console.log(existing.length)\n\nexport default function CheckboxList() {\n\tconst classes = useStyles();\n\tconst [checked, setChecked] = React.useState([]);\n\tconst [questions, setQuestions] = React.useState(Dataset.map((_,a) => a));\n\tconst [randomIndex, setRandomIndex] = React.useState(Math.floor(Math.random() * questions.length));\n\tconst [wrong, setWrong] = React.useState(false);\n\n\t// console.log( questions, randomIndex);\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\n\t\tif (currentIndex === -1) {\n\t\tnewChecked.push(value);\n\t\t} else {\n\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetChecked(newChecked);\n\t};\n\n\tconst handleSubmit = () => {\n\t\tconst ans = [];\n\t\tDataset[questions[randomIndex]].answers.forEach((item, count) => {\n\t\t\tif (item.correct) {\n\t\t\t\tans.push(count);\n\t\t\t}\n\t\t});\n\t\tconst isEqual = (JSON.stringify(ans.sort()) === JSON.stringify(checked.sort()));\n\n\t\tif (!isEqual) {\n\t\t\tsetWrong(true);\n\t\t} else {\n\t\t\thandleAccurateAnswer();\n\t\t\thandleNext();\n\t\t}\n\t}\n\n\tconst handleAccurateAnswer = () => {\n\t\tlet newQuestions = questions;\n\t\tnewQuestions.splice(randomIndex, 1);\n\t\tsetQuestions(newQuestions);\n\t}\n\n\tconst handleNext = () => {\n\t\tsetRandomIndex(Math.floor(Math.random() * questions.length));\n\t\tsetChecked([]);\n\t\tsetWrong(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<List className={classes.root}\n\t\t\t\tcomponent=\"nav\"\n\t\t\t\tsubheader={\n\t\t\t\t<ListSubheader disableSticky inset component=\"li\" id=\"nested-list-subheader\">\n\t\t\t\t\t{`${questions.length} Questions left`}\n\t\t\t\t</ListSubheader>\n\t\t\t}>\n\t\t\t\t<ListItem key={45} role={undefined}  >\n\n\t\t\t\t\t<ListItemText id={'question'} >\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparse(`<Typography style=\"fontSize:12px;\">${Dataset[questions[randomIndex]].question}</Typography>`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t</ListItemText>\n\n\t\t\t\t</ListItem>\n\t\t\t\t{Dataset[questions[randomIndex]].answers.map((value, count) => {\n\t\t\t\t\tconst labelId = `checkbox-list-label-${count}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t<ListItem key={count} role={undefined} dense button onClick={handleToggle(count)}>\n\t\t\t\t\t\t{/* <ListItemIcon>\n\t\t\t\t\t\t</ListItemIcon> */}\n\t\t\t\t\t\t\t\t<ListItemText dense secondaryTypographyProps={{\n\t\t\t\t\t\t\t\t\tvariant: 'caption',\n\t\t\t\t\t\t\t\t}} id={labelId}  >\n\n\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\talignItems:'center'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\t\t\tchecked={checked.indexOf(count) !== -1}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: wrong && (value.correct ? 'green':'red')\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\n\t\t\t\t\t\t\t\t\t\tcolor: wrong && (value.correct ? 'green':'red')\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{value.body}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t\t<div style={{ textAlign:'center', paddingTop:'20px'}}>\n\t\t\t\t{\n\t\t\t\t\t!wrong\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Button onClick={handleNext} variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button>\n\t\t\t\t\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n    "],"sourceRoot":""}